// Generated by Xata Codegen 0.29.5. Please do not edit.
import { buildClient } from "@xata.io/client";
/** @typedef { import('./types').SchemaTables } SchemaTables */
/** @type { SchemaTables } */
const tables = [
  {
    name: "Answer",
    columns: [
      { name: "comment", type: "text" },
      { name: "type", type: "text" },
      { name: "question_id", type: "link", link: { table: "Question" } },
      { name: "survey_id", type: "link", link: { table: "Survey" } },
    ],
  },
  {
    name: "Assigns",
    columns: [
      {
        name: "datetime",
        type: "datetime",
        notNull: true,
        defaultValue: "now",
      },
      { name: "quote_id", type: "link", link: { table: "Quote" } },
      { name: "user_id", type: "link", link: { table: "User" } },
    ],
  },
  {
    name: "User",
    columns: [
      {
        name: "first_name",
        type: "text",
        notNull: true,
        defaultValue: "first_name",
      },
      {
        name: "last_name",
        type: "text",
        notNull: true,
        defaultValue: "last_name",
      },
      {
        name: "email",
        type: "text",
        notNull: true,
        defaultValue: "example@gmail.com",
      },
      {
        name: "password",
        type: "text",
        notNull: true,
        defaultValue: "password",
      },
      { name: "streak_count", type: "int", notNull: true, defaultValue: "0" },
      { name: "image", type: "file", file: { defaultPublicAccess: true } },
    ],
    revLinks: [
      { column: "user_id", table: "Assigns" },
      { column: "user_id", table: "Chooses" },
      { column: "user_id", table: "Survey" },
    ],
  },
  {
    name: "Chooses",
    columns: [
      {
        name: "datetime",
        type: "datetime",
        notNull: true,
        defaultValue: "now",
      },
      { name: "user_id", type: "link", link: { table: "User" } },
      { name: "welcome_mood_id", type: "link", link: { table: "WelcomeMood" } },
    ],
  },
  {
    name: "Question",
    columns: [
      { name: "question_id", type: "int", notNull: true, defaultValue: "0" },
      { name: "text", type: "text", notNull: true, defaultValue: "text" },
    ],
    revLinks: [{ column: "question_id", table: "Answer" }],
  },
  {
    name: "Quote",
    columns: [
      {
        name: "author",
        type: "text",
        notNull: true,
        defaultValue: "Anonymous",
      },
      { name: "level", type: "text", notNull: true, defaultValue: "mid" },
      { name: "text", type: "text", notNull: true, defaultValue: "text" },
    ],
    revLinks: [{ column: "quote_id", table: "Assigns" }],
  },
  {
    name: "WelcomeMood",
    columns: [
      { name: "type", type: "text", notNull: true, defaultValue: "Not True" },
    ],
    revLinks: [{ column: "welcome_mood_id", table: "Chooses" }],
  },
  {
    name: "Survey",
    columns: [
      { name: "version", type: "int", notNull: true, defaultValue: "1" },
      {
        name: "posted_at",
        type: "datetime",
        notNull: true,
        defaultValue: "now",
      },
      { name: "completion_time", type: "datetime" },
      { name: "survey_id", type: "int", notNull: true, defaultValue: "0" },
      { name: "user_id", type: "link", link: { table: "User" } },
    ],
    revLinks: [{ column: "survey_id", table: "Answer" }],
  },
];
/** @type { import('@xata.io/client').ClientConstructor<{}> } */
const DatabaseClient = buildClient();
const defaultOptions = {
  databaseURL:
    "https://Alexandros-Tsaparas-s-workspace-k2n6ga.eu-central-1.xata.sh/db/Mood_Tracker",
};
/** @typedef { import('./types').DatabaseSchema } DatabaseSchema */
/** @extends DatabaseClient<DatabaseSchema> */
export class XataClient extends DatabaseClient {
  constructor(options) {
    super({ ...defaultOptions, ...options }, tables);
  }
}
let instance = undefined;
/** @type { () => XataClient } */
export const getXataClient = () => {
  if (instance) return instance;
  instance = new XataClient();
  return instance;
};
